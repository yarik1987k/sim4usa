/****************
 * Fonts
 ****************/
/****************
 * Paints
 ****************/
/****************
 * Effects
 ****************/
/****************
 * Grid Settings
 ****************/
.block-tabs {
  overflow: hidden;
}

.tabs__link-list {
  overflow-x: auto;
  margin: 0 0 1.25rem !important;
  white-space: nowrap;
}
.tabs__link-list::before, .tabs__link-list::after {
  content: "";
  display: table;
}
.tabs__link-list::after {
  clear: both;
}
@media (min-width: 48rem) {
  .tabs__link-list {
    padding: 0 !important;
    margin: 0 0 1.75rem !important;
  }
}
.tabs__link-list li {
  margin-bottom: 0.25rem !important;
}
.tabs__link-list li::before {
  content: none !important;
}
.tabs__link-list-wrapper {
  position: relative;
}
.tabs__link-list-wrapper.has-scroll::before {
  display: block;
}
.tabs__link {
  font-size: 0.9375rem;
  font-weight: 700;
  margin: 0;
  display: inline-block;
  float: none;
  border-bottom: 1px solid #e1e1e1;
}
.tabs__link a {
  font-weight: 600;
  font-size: clamp(0.875rem, 0.7254672897rem + 0.3115264798vw, 1rem);
  line-height: clamp(1rem, 0.4018691589rem + 1.246105919vw, 1.5rem);
  position: relative;
  color: #333333;
  display: block;
  padding: 0.75rem 1.25rem;
  transition: color 0.2s linear;
  text-align: center;
  text-decoration: none;
}
@media (min-width: 36rem) {
  .tabs__link a {
    min-width: 12.5rem;
  }
}
.tabs__link a:hover {
  background-color: #f7f7f7;
}
.tabs__link a:focus, .tabs__link a:hover {
  color: inherit;
}
.tabs__link a::after {
  position: absolute;
  right: auto;
  bottom: -0.0625rem;
  left: 0;
  display: block;
  width: 0;
  height: 0.125rem;
  content: "";
  transition: all 0.2s linear;
  background-color: #ffeabd;
}
.tabs__link.active a::after {
  width: 100%;
}
.tabs__tab-content {
  position: static;
  visibility: visible;
  transition: opacity 0.2s linear;
  opacity: 1;
}
.tabs__tab-content:not(.active) {
  position: absolute;
  visibility: hidden;
  opacity: 0;
  left: -624.9375rem;
}
.tabs__divider {
  background: #b3b3b3;
  height: 0.0625rem;
  font-size: 0;
  overflow: hidden;
  margin-top: 2.9375rem;
}
@media (min-width: 48rem) {
  .tabs__divider {
    margin-top: 4.9375rem;
  }
}

.tab-head-wrap {
  position: relative;
}
@media (max-width: 47.98rem) {
  .tab-head-wrap {
    margin: 0 -1.25rem;
  }
  .tab-head-wrap .tab-head::before, .tab-head-wrap .tab-head::after {
    content: "";
    display: table;
  }
  .tab-head-wrap .tab-head::after {
    clear: both;
  }
}
.tab-head-wrap.has-scroll::after {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  display: block;
  width: 4.375rem;
  content: "";
  background-image: linear-gradient(270deg, #f7f7f7 0%, rgba(247, 247, 247, 0) 100%);
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNzcy9zcmMvX19zdHlsZXMvX3ZhcmlhYmxlcy5zY3NzIiwiYWNmLWJsb2Nrcy90YWJzL3NyYy9zdHlsZS5zY3NzIiwiY3NzL3NyYy9fX3N0eWxlcy9fbWl4aW5zLnNjc3MiLCJjc3Mvc3JjL3ZlbmRvci9ib290c3RyYXAvbWl4aW5zL19icmVha3BvaW50cy5zY3NzIiwiY3NzL3NyYy9fX3N0eWxlcy9fZm9udC1zdHlsZXMuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFLQTtBQUFBO0FBQUE7QUFtQ0E7QUFBQTtBQUFBO0FBVUE7QUFBQTtBQUFBO0FDaERBO0VBQ0M7OztBQUlBO0VBRUM7RUFDQTtFQUNBOztBQ05EO0VBRUM7RUFDQTs7QUFHRDtFQUNDOztBQ2dERTtFRnJESDtJQU9FO0lBQ0E7OztBQUdEO0VBQ0M7O0FBRUE7RUFDQzs7QUFJRjtFQUNDOztBQUdDO0VBQ0M7O0FBTUo7RUFDQztFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7O0FBRUE7RUdDRDtFQUNBO0VBQ0E7RUhERTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTs7QUVPQztFRmZGO0lBV0U7OztBQUdEO0VBQ0M7O0FBR0Q7RUFFQzs7QUFHRDtFQUNDO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBOztBQU1BO0VBQ0M7O0FBTUo7RUFDQztFQUNBO0VBQ0E7RUFDQTs7QUFFQTtFQUNDO0VBQ0E7RUFDQTtFQUNBOztBQUlGO0VBQ0M7RUFDQTtFQUNBO0VBQ0E7RUFDQTs7QUVsREU7RUY2Q0g7SUFRRTs7OztBQUtIO0VBQ0M7O0FFOUNHO0VGNkNKO0lBSUU7O0VDckhEO0lBRUM7SUFDQTs7RUFHRDtJQUNDOzs7QURzSEE7RUFDQztFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBIiwiZmlsZSI6ImFjZi1ibG9ja3MvdGFicy9kaXN0L3N0eWxlLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKioqKioqKioqKioqKioqXG4gKiBGb250c1xuICoqKioqKioqKioqKioqKiovXG4kZm9udC1iYXNlOidJbnRlcicsIHNhbnMtc2VyaWY7XG5cbi8qKioqKioqKioqKioqKioqXG4gKiBQYWludHNcbiAqKioqKioqKioqKioqKioqL1xuJHBhaW50czogKFxuXHRhY2NlbnQ6ICNmZmVhYmQsXG5cdGFjY2VudC12YXJpYW50OiAjRjVCMzE4LFxuXHRiZy1kYXJrOiAjMjMyNjJDLFxuXHRiZy1saWdodDogI2ZmZixcblx0dGV4dC1kYXJrOiAjMzMzMzMzLFxuXHR0ZXh0LWxpZ2h0OiAjZmZmLFxuXHRibHVlLXRleHQ6ICMyRjI1OEIsXG5cdG5ldXRyYWwtMzA6ICM0YzRjNGMsXG5cdG5ldXRyYWwtNDU6ICM3MzczNzMsXG5cdG5ldXRyYWwtNzA6ICNiM2IzYjMsXG5cdG5ldXRyYWwtODg6ICNlMWUxZTEsXG5cdG5ldXRyYWwtOTQ6ICNmMGYwZjAsXG5cdG5ldXRyYWwtOTc6ICNmN2Y3ZjcsXG5cdGdyYXktMTogIzIzMjYyRixcblx0Z3JheS0yOiNFMEUwRTAsXG5cdGdyYXktMzojNzc3RTkxLFxuXHRncmF5LTQ6ICNCMUI1QzQsXG5cdGdyYXktZGFyazogIzNEM0QzRCxcblx0Z3JlZW4tbGlnaHQ6Izk2RkY0RCxcblx0ZXJyb3I6ICNiMDAwMjAsXG5cdHdhcm5pbmc6ICNmOWE1MTMsXG5cdHN1Y2Nlc3M6ICMwMDg3MzcsXG5cdGluZm9ybWF0aW9uOiAjMDA2YmIyLFxuXHRhdXRvZmlsbDogI2U2ZjBmNyxcblx0YmxhY2stMTogIzRENEQ0RCxcblx0YmxhY2s6ICMwMDAwMDAsXG5cdGdyYXktNTogI0Q5RDlEOSxcblx0Z3JheS02OiAjRjJGMkYyXG5cbik7XG5cbi8qKioqKioqKioqKioqKioqXG4gKiBFZmZlY3RzXG4gKioqKioqKioqKioqKioqKi9cbiRlZmZlY3RzOiAoXG5cdGRyb3BzaGFkb3c6IDAgMCAxMHB4IHJnYmEoMCwgMCwgMCwgMC4xKSxcblx0Y3RhOiAwIC00cHggNHB4IHJnYmEoMCwgMCwgMCwgMC4wNSksXG5cdHllbGxvd3NoYWRvdzogMHB4IDRweCA4cHggcmdiYSgyNDUsIDE3OSwgMjQsIDAuNDYpLFxuXHRoZXJvc2hhZG93OiAtMTZweCAyMnB4IDQycHggcmdiYSgwLCAzMSwgNzcsIDAuMTIpXG4pO1xuXG4vKioqKioqKioqKioqKioqKlxuICogR3JpZCBTZXR0aW5nc1xuICoqKioqKioqKioqKioqKiovXG5cbiRncmlkLWJyZWFrcG9pbnRzOiAoXG5cdHhzOiAwLFxuXHRzbTogcmVtKDU3NiksXG5cdG1kOiByZW0oNzY4KSxcblx0bGc6IHJlbSg5OTIpLFxuXHR4bDogcmVtKDEyMDApLFxuXHR4eGw6IHJlbSgxNDEwKVxuKTtcbiRjdXN0b20tYnJlYWtwb2ludHM6IChcblx0bW9iaWxlbWVudTogcmVtKDEyMDApXG4pO1xuJGNvbnRhaW5lci1tYXgtd2lkdGhzOiAoXG5cdHhzOiByZW0oNTc2KSxcblx0c206IHJlbSg3NjgpLFxuXHRtZDogcmVtKDk5MiksXG5cdGxnOiByZW0oMTIwMCksXG5cdHhsOiByZW0oMTQxMClcbik7XG5cbiRjb250YWluZXItc20tc3BhY2luZzogcmVtKDIwKTtcbiRjb250YWluZXItbWQtc3BhY2luZzogcmVtKDQwKTtcbiRjb250YWluZXItbGctc3BhY2luZzogcmVtKDYwKTtcblxuJGdyaWQtZ3V0dGVyLXdpZHRoOiByZW0oMzApO1xuXG4vLyBUcmFuc2l0aW9uc1xuJHRyYW5zaXRpb24tc3RhbmRhcmQ6IGFsbCAwLjJzIGxpbmVhcjtcblxuLy8gQmxvY2sgdGl0bGVcbiRibG9jay10aXRsZS1tYi1zbTogcmVtKDQwKTtcbiRibG9jay10aXRsZS1tYi1tZDogcmVtKDY0KTtcblxuJG1lZGlhLW1hcmdpbjogMzBweDtcbiRtZWRpYS1tYXJnaW4tbW9iaWxlOiAyMHB4O1xuXG4vLyBPdXRsaW5lXG4kb3V0bGluZTogcmVtKDIpIHNvbGlkICM3YWFjZmU7XG4iLCJAaW1wb3J0IFwiLi4vLi4vLi4vY3NzL3NyYy9saWIvYmFzZS1pbmNsdWRlc1wiO1xuXG4uYmxvY2stdGFicyB7XG5cdG92ZXJmbG93OiBoaWRkZW47XG59XG5cbi50YWJzIHtcblx0Jl9fbGluay1saXN0IHtcblx0XHRAaW5jbHVkZSBjZigpO1xuXHRcdG92ZXJmbG93LXg6IGF1dG87XG5cdFx0bWFyZ2luOiAwIDAgcmVtKDI0IC0gNCkgIWltcG9ydGFudDsgLy8gLTQgZm9yIHRoZSBsaSBtYXJnaW4gYm90dG9tXG5cdFx0d2hpdGUtc3BhY2U6IG5vd3JhcDtcblxuXHRcdEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAobWQpIHtcblx0XHRcdHBhZGRpbmc6IDAgIWltcG9ydGFudDtcblx0XHRcdG1hcmdpbjogMCAwIHJlbSgzMiAtIDQpICFpbXBvcnRhbnQ7IC8vIC00IGZvciB0aGUgbGkgbWFyZ2luIGJvdHRvbVxuXHRcdH1cblxuXHRcdGxpIHtcblx0XHRcdG1hcmdpbi1ib3R0b206IHJlbSg0KSAhaW1wb3J0YW50O1xuXG5cdFx0XHQmOjpiZWZvcmUge1xuXHRcdFx0XHRjb250ZW50OiBub25lICFpbXBvcnRhbnQ7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0Ji13cmFwcGVyIHtcblx0XHRcdHBvc2l0aW9uOiByZWxhdGl2ZTtcblxuXHRcdFx0Ji5oYXMtc2Nyb2xsIHtcblx0XHRcdFx0Jjo6YmVmb3JlIHtcblx0XHRcdFx0XHRkaXNwbGF5OiBibG9jaztcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdCZfX2xpbmsge1xuXHRcdGZvbnQtc2l6ZTogcmVtKDE1KTtcblx0XHRmb250LXdlaWdodDogNzAwO1xuXHRcdG1hcmdpbjogMDtcblx0XHRkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG5cdFx0ZmxvYXQ6IG5vbmU7XG5cdFx0Ym9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHBhaW50KG5ldXRyYWwtODgpO1xuXG5cdFx0YSB7XG5cdFx0XHRAaW5jbHVkZSBoNShmYWxzZSk7XG5cdFx0XHRwb3NpdGlvbjogcmVsYXRpdmU7XG5cdFx0XHRjb2xvcjogcGFpbnQodGV4dC1kYXJrKTtcblx0XHRcdGRpc3BsYXk6IGJsb2NrO1xuXHRcdFx0cGFkZGluZzogcmVtKDEyKSByZW0oMjApO1xuXHRcdFx0dHJhbnNpdGlvbjogY29sb3IgMC4ycyBsaW5lYXI7XG5cdFx0XHR0ZXh0LWFsaWduOiBjZW50ZXI7XG5cdFx0XHR0ZXh0LWRlY29yYXRpb246IG5vbmU7XG5cblx0XHRcdEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAoc20pIHtcblx0XHRcdFx0bWluLXdpZHRoOiByZW0oMjAwKTtcblx0XHRcdH1cblxuXHRcdFx0Jjpob3ZlciB7XG5cdFx0XHRcdGJhY2tncm91bmQtY29sb3I6IHBhaW50KG5ldXRyYWwtOTcpO1xuXHRcdFx0fVxuXG5cdFx0XHQmOmZvY3VzLFxuXHRcdFx0Jjpob3ZlciB7XG5cdFx0XHRcdGNvbG9yOiBpbmhlcml0O1xuXHRcdFx0fVxuXG5cdFx0XHQmOjphZnRlciB7XG5cdFx0XHRcdHBvc2l0aW9uOiBhYnNvbHV0ZTtcblx0XHRcdFx0cmlnaHQ6IGF1dG87XG5cdFx0XHRcdGJvdHRvbTogcmVtKC0xKTtcblx0XHRcdFx0bGVmdDogMDtcblx0XHRcdFx0ZGlzcGxheTogYmxvY2s7XG5cdFx0XHRcdHdpZHRoOiAwO1xuXHRcdFx0XHRoZWlnaHQ6IHJlbSgyKTtcblx0XHRcdFx0Y29udGVudDogXCJcIjtcblx0XHRcdFx0dHJhbnNpdGlvbjogYWxsIDAuMnMgbGluZWFyO1xuXHRcdFx0XHRiYWNrZ3JvdW5kLWNvbG9yOiBwYWludChhY2NlbnQpO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdCYuYWN0aXZlIHtcblx0XHRcdGEge1xuXHRcdFx0XHQmOjphZnRlciB7XG5cdFx0XHRcdFx0d2lkdGg6IDEwMCU7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHQmX190YWItY29udGVudCB7XG5cdFx0cG9zaXRpb246IHN0YXRpYztcblx0XHR2aXNpYmlsaXR5OiB2aXNpYmxlO1xuXHRcdHRyYW5zaXRpb246IG9wYWNpdHkgMC4ycyBsaW5lYXI7XG5cdFx0b3BhY2l0eTogMTtcblxuXHRcdCY6bm90KC5hY3RpdmUpIHtcblx0XHRcdHBvc2l0aW9uOiBhYnNvbHV0ZTtcblx0XHRcdHZpc2liaWxpdHk6IGhpZGRlbjtcblx0XHRcdG9wYWNpdHk6IDA7XG5cdFx0XHRsZWZ0OiByZW0oLTk5OTkpO1xuXHRcdH1cblx0fVxuXG5cdCZfX2RpdmlkZXIge1xuXHRcdGJhY2tncm91bmQ6IHBhaW50KG5ldXRyYWwtNzApO1xuXHRcdGhlaWdodDogcmVtKDEpO1xuXHRcdGZvbnQtc2l6ZTogMDtcblx0XHRvdmVyZmxvdzogaGlkZGVuO1xuXHRcdG1hcmdpbi10b3A6IHJlbSg0Nyk7XG5cblx0XHRAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKG1kKSB7XG5cdFx0XHRtYXJnaW4tdG9wOiByZW0oNzkpO1xuXHRcdH1cblx0fVxufVxuXG4udGFiLWhlYWQtd3JhcCB7XG5cdHBvc2l0aW9uOiByZWxhdGl2ZTtcblxuXHRAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LWRvd24oc20pIHtcblx0XHRtYXJnaW46IDAgcmVtKC0yMCk7XG5cblx0XHQudGFiLWhlYWQge1xuXHRcdFx0QGluY2x1ZGUgY2YoKTtcblx0XHR9XG5cdH1cblxuXHQmLmhhcy1zY3JvbGwge1xuXHRcdCY6OmFmdGVyIHtcblx0XHRcdHBvc2l0aW9uOiBhYnNvbHV0ZTtcblx0XHRcdHRvcDogMDtcblx0XHRcdHJpZ2h0OiAwO1xuXHRcdFx0Ym90dG9tOiAwO1xuXHRcdFx0ZGlzcGxheTogYmxvY2s7XG5cdFx0XHR3aWR0aDogcmVtKDcwKTtcblx0XHRcdGNvbnRlbnQ6IFwiXCI7XG5cdFx0XHRiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQoMjcwZGVnLCBwYWludChuZXV0cmFsLTk3KSAwJSwgcmdiYShwYWludChuZXV0cmFsLTk3KSwgMCkgMTAwJSk7XG5cdFx0fVxuXHR9XG59XG4iLCIvL1RoaXMgZmlsZSBpcyBvbmx5IGZvciBtaXhpbnMuIERvbid0IGluY2x1ZGUgYW55IHN0eWxlcyBpbiB0aGlzIGZpbGUgb3IgZWxzZSB0aGV5IHdpbGwgcmVwZWF0ZWQgaW4gZXZlcnkgYmxvY2suXG5cbkB1c2UgXCJzYXNzOm1hdGhcIjtcblxuQG1peGluIGNmIHtcblx0Jjo6YmVmb3JlLFxuXHQmOjphZnRlciB7XG5cdFx0Y29udGVudDogXCJcIjtcblx0XHRkaXNwbGF5OiB0YWJsZTtcblx0fVxuXG5cdCY6OmFmdGVyIHtcblx0XHRjbGVhcjogYm90aDtcblx0fVxufVxuXG5AZnVuY3Rpb24gdnctc2l6ZSgkcywgJHc6IDE0NDApIHtcblx0QHJldHVybiBtYXRoLmRpdigkcywgJHcpICogMTAwICsgdnc7XG59XG5cbkBtaXhpbiBoZWFkaW5ncyggJHN0YXJ0OiAxLCAkZW5kOiA2ICkge1xuXHQkaGVhZGluZ3M6IFwiXCI7XG5cblx0QGZvciAkaSBmcm9tICRzdGFydCB0aHJvdWdoICRlbmQge1xuXHRcdEBpZiAkaSAhPSAkc3RhcnQge1xuXHRcdFx0JGhlYWRpbmdzOiBcIiN7ICRoZWFkaW5ncyB9LGgjeyAkaSB9LC5oI3sgJGkgfVwiO1xuXHRcdH0gQGVsc2Uge1xuXHRcdFx0JGhlYWRpbmdzOiBcImgjeyAkaSB9LC5oI3sgJGkgfVwiO1xuXHRcdH1cblx0fVxuXG5cdCN7ICRoZWFkaW5ncyB9IHtcblx0XHRAY29udGVudDtcblx0fVxufVxuXG5AbWl4aW4gaWNvbi1mb250KCAkY29udGVudDogXCJcIiwgJGZvbnQtc2l6ZTogMjRweCApIHtcblx0Y29udGVudDogJGNvbnRlbnQ7XG5cdGZvbnQtZmFtaWx5OiAkZm9udC1pY29uZm9udDtcblx0Zm9udC1zaXplOiAkZm9udC1zaXplO1xuXHRmb250LXN0eWxlOiBub3JtYWw7XG5cdGZvbnQtd2VpZ2h0OiA0MDA7XG5cdGZvbnQtdmFyaWFudDogbm9ybWFsO1xuXHR0ZXh0LXRyYW5zZm9ybTogbm9uZTtcblx0bGluZS1oZWlnaHQ6IDE7XG5cdC13ZWJraXQtZm9udC1zbW9vdGhpbmc6IGFudGlhbGlhc2VkO1xuXHQtbW96LW9zeC1mb250LXNtb290aGluZzogZ3JheXNjYWxlO1xufVxuXG5AbWl4aW4gcm0tYmVmb3JlKCkge1xuXHQmOjpiZWZvcmUge1xuXHRcdGNvbnRlbnQ6IG5vbmUgIWltcG9ydGFudDtcblx0fVxufVxuXG5AbWl4aW4gcm0tYWZ0ZXIoKSB7XG5cdCY6OmJlZm9yZSB7XG5cdFx0Y29udGVudDogbm9uZSAhaW1wb3J0YW50O1xuXHR9XG59XG5cbkBtaXhpbiByZXNwb25zaXZlLWdyaWQoJHNtOiAxMiwgJG1kOiAxMiwgJGxnOiAxMiwgJHhsOiAxMiwgJHh4bDogMTIpIHtcblx0d2lkdGg6IGNhbGModmFyKC0tY29sdW1uV2lkdGgpICogI3skc219IC0gNDBweCk7XG5cdG1heC13aWR0aDogY2FsYyh2YXIoLS1jb2x1bW5NYXhXaWR0aCkgKiAjeyRzbX0gLSA0MHB4KTtcblxuXHRAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LXVwKG1kKSB7XG5cdFx0d2lkdGg6IGNhbGModmFyKC0tY29sdW1uV2lkdGgpICogI3skbWR9IC0gMzBweCk7XG5cdFx0bWF4LXdpZHRoOiBjYWxjKHZhcigtLWNvbHVtbk1heFdpZHRoKSAqICN7JG1kfSAtIDMwcHgpO1xuXHR9XG5cblx0QGlmICgkbGcgIT0gJG1kKSB7XG5cdFx0QGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cChsZykge1xuXHRcdFx0d2lkdGg6IGNhbGModmFyKC0tY29sdW1uV2lkdGgpICogI3skbGd9IC0gMzBweCk7XG5cdFx0XHRtYXgtd2lkdGg6IGNhbGModmFyKC0tY29sdW1uTWF4V2lkdGgpICogI3skbGd9IC0gMzBweCk7XG5cdFx0fVxuXHR9XG5cblx0QGlmICgkeGwgIT0gJGxnKSB7XG5cdFx0QGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cCh4bCkge1xuXHRcdFx0d2lkdGg6IGNhbGModmFyKC0tY29sdW1uV2lkdGgpICogI3skeGx9IC0gMzBweCk7XG5cdFx0XHRtYXgtd2lkdGg6IGNhbGModmFyKC0tY29sdW1uTWF4V2lkdGgpICogI3skeGx9IC0gMzBweCk7XG5cdFx0fVxuXHR9XG5cblx0QGlmICgkeHhsICE9ICR4bCkge1xuXHRcdEBpbmNsdWRlIG1lZGlhLWJyZWFrcG9pbnQtdXAoeHhsKSB7XG5cdFx0XHR3aWR0aDogY2FsYyh2YXIoLS1jb2x1bW5XaWR0aCkgKiAjeyR4eGx9IC0gMzBweCk7XG5cdFx0XHRtYXgtd2lkdGg6IGNhbGModmFyKC0tY29sdW1uTWF4V2lkdGgpICogI3skeHhsfSAtIDMwcHgpO1xuXHRcdH1cblx0fVxufVxuIiwiLy8gQnJlYWtwb2ludCB2aWV3cG9ydCBzaXplcyBhbmQgbWVkaWEgcXVlcmllcy5cbi8vXG4vLyBCcmVha3BvaW50cyBhcmUgZGVmaW5lZCBhcyBhIG1hcCBvZiAobmFtZTogbWluaW11bSB3aWR0aCksIG9yZGVyIGZyb20gc21hbGwgdG8gbGFyZ2U6XG4vL1xuLy8gICAgKHhzOiAwLCBzbTogNTc2cHgsIG1kOiA3NjhweCwgbGc6IDk5MnB4LCB4bDogMTIwMHB4KVxuLy9cbi8vIFRoZSBtYXAgZGVmaW5lZCBpbiB0aGUgYCRncmlkLWJyZWFrcG9pbnRzYCBnbG9iYWwgdmFyaWFibGUgaXMgdXNlZCBhcyB0aGUgYCRicmVha3BvaW50c2AgYXJndW1lbnQgYnkgZGVmYXVsdC5cblxuLy8gTmFtZSBvZiB0aGUgbmV4dCBicmVha3BvaW50LCBvciBudWxsIGZvciB0aGUgbGFzdCBicmVha3BvaW50LlxuLy9cbi8vICAgID4+IGJyZWFrcG9pbnQtbmV4dChzbSlcbi8vICAgIG1kXG4vLyAgICA+PiBicmVha3BvaW50LW5leHQoc20sICh4czogMCwgc206IDU3NnB4LCBtZDogNzY4cHgsIGxnOiA5OTJweCwgeGw6IDEyMDBweCkpXG4vLyAgICBtZFxuLy8gICAgPj4gYnJlYWtwb2ludC1uZXh0KHNtLCAkYnJlYWtwb2ludC1uYW1lczogKHhzIHNtIG1kIGxnIHhsKSlcbi8vICAgIG1kXG5AZnVuY3Rpb24gYnJlYWtwb2ludC1uZXh0KCRuYW1lLCAkYnJlYWtwb2ludHM6ICRncmlkLWJyZWFrcG9pbnRzLCAkYnJlYWtwb2ludC1uYW1lczogbWFwLWtleXMoJGJyZWFrcG9pbnRzKSkge1xuICAkbjogaW5kZXgoJGJyZWFrcG9pbnQtbmFtZXMsICRuYW1lKTtcbiAgQHJldHVybiBpZigkbiAhPSBudWxsIGFuZCAkbiA8IGxlbmd0aCgkYnJlYWtwb2ludC1uYW1lcyksIG50aCgkYnJlYWtwb2ludC1uYW1lcywgJG4gKyAxKSwgbnVsbCk7XG59XG5cbi8vIE1pbmltdW0gYnJlYWtwb2ludCB3aWR0aC4gTnVsbCBmb3IgdGhlIHNtYWxsZXN0IChmaXJzdCkgYnJlYWtwb2ludC5cbi8vXG4vLyAgICA+PiBicmVha3BvaW50LW1pbihzbSwgKHhzOiAwLCBzbTogNTc2cHgsIG1kOiA3NjhweCwgbGc6IDk5MnB4LCB4bDogMTIwMHB4KSlcbi8vICAgIDU3NnB4XG5AZnVuY3Rpb24gYnJlYWtwb2ludC1taW4oJG5hbWUsICRicmVha3BvaW50czogJGdyaWQtYnJlYWtwb2ludHMpIHtcbiAgJG1pbjogbWFwLWdldCgkYnJlYWtwb2ludHMsICRuYW1lKTtcbiAgQHJldHVybiBpZigkbWluICE9IDAsICRtaW4sIG51bGwpO1xufVxuXG4vLyBNYXhpbXVtIGJyZWFrcG9pbnQgd2lkdGguIE51bGwgZm9yIHRoZSBsYXJnZXN0IChsYXN0KSBicmVha3BvaW50LlxuLy8gVGhlIG1heGltdW0gdmFsdWUgaXMgY2FsY3VsYXRlZCBhcyB0aGUgbWluaW11bSBvZiB0aGUgbmV4dCBvbmUgbGVzcyAwLjAycHhcbi8vIHRvIHdvcmsgYXJvdW5kIHRoZSBsaW1pdGF0aW9ucyBvZiBgbWluLWAgYW5kIGBtYXgtYCBwcmVmaXhlcyBhbmQgdmlld3BvcnRzIHdpdGggZnJhY3Rpb25hbCB3aWR0aHMuXG4vLyBTZWUgaHR0cHM6Ly93d3cudzMub3JnL1RSL21lZGlhcXVlcmllcy00LyNtcS1taW4tbWF4XG4vLyBVc2VzIDAuMDJweCByYXRoZXIgdGhhbiAwLjAxcHggdG8gd29yayBhcm91bmQgYSBjdXJyZW50IHJvdW5kaW5nIGJ1ZyBpbiBTYWZhcmkuXG4vLyBTZWUgaHR0cHM6Ly9idWdzLndlYmtpdC5vcmcvc2hvd19idWcuY2dpP2lkPTE3ODI2MVxuLy9cbi8vICAgID4+IGJyZWFrcG9pbnQtbWF4KHNtLCAoeHM6IDAsIHNtOiA1NzZweCwgbWQ6IDc2OHB4LCBsZzogOTkycHgsIHhsOiAxMjAwcHgpKVxuLy8gICAgNzY3Ljk4cHhcbkBmdW5jdGlvbiBicmVha3BvaW50LW1heCgkbmFtZSwgJGJyZWFrcG9pbnRzOiAkZ3JpZC1icmVha3BvaW50cykge1xuICAkbmV4dDogYnJlYWtwb2ludC1uZXh0KCRuYW1lLCAkYnJlYWtwb2ludHMpO1xuICBAcmV0dXJuIGlmKCRuZXh0LCBicmVha3BvaW50LW1pbigkbmV4dCwgJGJyZWFrcG9pbnRzKSAtIC4wMiwgbnVsbCk7XG59XG5cbi8vIFJldHVybnMgYSBibGFuayBzdHJpbmcgaWYgc21hbGxlc3QgYnJlYWtwb2ludCwgb3RoZXJ3aXNlIHJldHVybnMgdGhlIG5hbWUgd2l0aCBhIGRhc2ggaW4gZnJvbnQuXG4vLyBVc2VmdWwgZm9yIG1ha2luZyByZXNwb25zaXZlIHV0aWxpdGllcy5cbi8vXG4vLyAgICA+PiBicmVha3BvaW50LWluZml4KHhzLCAoeHM6IDAsIHNtOiA1NzZweCwgbWQ6IDc2OHB4LCBsZzogOTkycHgsIHhsOiAxMjAwcHgpKVxuLy8gICAgXCJcIiAgKFJldHVybnMgYSBibGFuayBzdHJpbmcpXG4vLyAgICA+PiBicmVha3BvaW50LWluZml4KHNtLCAoeHM6IDAsIHNtOiA1NzZweCwgbWQ6IDc2OHB4LCBsZzogOTkycHgsIHhsOiAxMjAwcHgpKVxuLy8gICAgXCItc21cIlxuQGZ1bmN0aW9uIGJyZWFrcG9pbnQtaW5maXgoJG5hbWUsICRicmVha3BvaW50czogJGdyaWQtYnJlYWtwb2ludHMpIHtcbiAgQHJldHVybiBpZihicmVha3BvaW50LW1pbigkbmFtZSwgJGJyZWFrcG9pbnRzKSA9PSBudWxsLCBcIlwiLCBcIi0jeyRuYW1lfVwiKTtcbn1cblxuLy8gTWVkaWEgb2YgYXQgbGVhc3QgdGhlIG1pbmltdW0gYnJlYWtwb2ludCB3aWR0aC4gTm8gcXVlcnkgZm9yIHRoZSBzbWFsbGVzdCBicmVha3BvaW50LlxuLy8gTWFrZXMgdGhlIEBjb250ZW50IGFwcGx5IHRvIHRoZSBnaXZlbiBicmVha3BvaW50IGFuZCB3aWRlci5cbkBtaXhpbiBtZWRpYS1icmVha3BvaW50LXVwKCRuYW1lLCAkYnJlYWtwb2ludHM6ICRncmlkLWJyZWFrcG9pbnRzKSB7XG4gICRtaW46IGJyZWFrcG9pbnQtbWluKCRuYW1lLCAkYnJlYWtwb2ludHMpO1xuICBAaWYgJG1pbiB7XG4gICAgQG1lZGlhIChtaW4td2lkdGg6ICRtaW4pIHtcbiAgICAgIEBjb250ZW50O1xuICAgIH1cbiAgfSBAZWxzZSB7XG4gICAgQGNvbnRlbnQ7XG4gIH1cbn1cblxuLy8gTWVkaWEgb2YgYXQgbW9zdCB0aGUgbWF4aW11bSBicmVha3BvaW50IHdpZHRoLiBObyBxdWVyeSBmb3IgdGhlIGxhcmdlc3QgYnJlYWtwb2ludC5cbi8vIE1ha2VzIHRoZSBAY29udGVudCBhcHBseSB0byB0aGUgZ2l2ZW4gYnJlYWtwb2ludCBhbmQgbmFycm93ZXIuXG5AbWl4aW4gbWVkaWEtYnJlYWtwb2ludC1kb3duKCRuYW1lLCAkYnJlYWtwb2ludHM6ICRncmlkLWJyZWFrcG9pbnRzKSB7XG4gICRtYXg6IGJyZWFrcG9pbnQtbWF4KCRuYW1lLCAkYnJlYWtwb2ludHMpO1xuICBAaWYgJG1heCB7XG4gICAgQG1lZGlhIChtYXgtd2lkdGg6ICRtYXgpIHtcbiAgICAgIEBjb250ZW50O1xuICAgIH1cbiAgfSBAZWxzZSB7XG4gICAgQGNvbnRlbnQ7XG4gIH1cbn1cblxuLy8gTWVkaWEgdGhhdCBzcGFucyBtdWx0aXBsZSBicmVha3BvaW50IHdpZHRocy5cbi8vIE1ha2VzIHRoZSBAY29udGVudCBhcHBseSBiZXR3ZWVuIHRoZSBtaW4gYW5kIG1heCBicmVha3BvaW50c1xuQG1peGluIG1lZGlhLWJyZWFrcG9pbnQtYmV0d2VlbigkbG93ZXIsICR1cHBlciwgJGJyZWFrcG9pbnRzOiAkZ3JpZC1icmVha3BvaW50cykge1xuICAkbWluOiBicmVha3BvaW50LW1pbigkbG93ZXIsICRicmVha3BvaW50cyk7XG4gICRtYXg6IGJyZWFrcG9pbnQtbWF4KCR1cHBlciwgJGJyZWFrcG9pbnRzKTtcblxuICBAaWYgJG1pbiAhPSBudWxsIGFuZCAkbWF4ICE9IG51bGwge1xuICAgIEBtZWRpYSAobWluLXdpZHRoOiAkbWluKSBhbmQgKG1heC13aWR0aDogJG1heCkge1xuICAgICAgQGNvbnRlbnQ7XG4gICAgfVxuICB9IEBlbHNlIGlmICRtYXggPT0gbnVsbCB7XG4gICAgQGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cCgkbG93ZXIsICRicmVha3BvaW50cykge1xuICAgICAgQGNvbnRlbnQ7XG4gICAgfVxuICB9IEBlbHNlIGlmICRtaW4gPT0gbnVsbCB7XG4gICAgQGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC1kb3duKCR1cHBlciwgJGJyZWFrcG9pbnRzKSB7XG4gICAgICBAY29udGVudDtcbiAgICB9XG4gIH1cbn1cblxuLy8gTWVkaWEgYmV0d2VlbiB0aGUgYnJlYWtwb2ludCdzIG1pbmltdW0gYW5kIG1heGltdW0gd2lkdGhzLlxuLy8gTm8gbWluaW11bSBmb3IgdGhlIHNtYWxsZXN0IGJyZWFrcG9pbnQsIGFuZCBubyBtYXhpbXVtIGZvciB0aGUgbGFyZ2VzdCBvbmUuXG4vLyBNYWtlcyB0aGUgQGNvbnRlbnQgYXBwbHkgb25seSB0byB0aGUgZ2l2ZW4gYnJlYWtwb2ludCwgbm90IHZpZXdwb3J0cyBhbnkgd2lkZXIgb3IgbmFycm93ZXIuXG5AbWl4aW4gbWVkaWEtYnJlYWtwb2ludC1vbmx5KCRuYW1lLCAkYnJlYWtwb2ludHM6ICRncmlkLWJyZWFrcG9pbnRzKSB7XG4gICRtaW46IGJyZWFrcG9pbnQtbWluKCRuYW1lLCAkYnJlYWtwb2ludHMpO1xuICAkbWF4OiBicmVha3BvaW50LW1heCgkbmFtZSwgJGJyZWFrcG9pbnRzKTtcblxuICBAaWYgJG1pbiAhPSBudWxsIGFuZCAkbWF4ICE9IG51bGwge1xuICAgIEBtZWRpYSAobWluLXdpZHRoOiAkbWluKSBhbmQgKG1heC13aWR0aDogJG1heCkge1xuICAgICAgQGNvbnRlbnQ7XG4gICAgfVxuICB9IEBlbHNlIGlmICRtYXggPT0gbnVsbCB7XG4gICAgQGluY2x1ZGUgbWVkaWEtYnJlYWtwb2ludC11cCgkbmFtZSwgJGJyZWFrcG9pbnRzKSB7XG4gICAgICBAY29udGVudDtcbiAgICB9XG4gIH0gQGVsc2UgaWYgJG1pbiA9PSBudWxsIHtcbiAgICBAaW5jbHVkZSBtZWRpYS1icmVha3BvaW50LWRvd24oJG5hbWUsICRicmVha3BvaW50cykge1xuICAgICAgQGNvbnRlbnQ7XG4gICAgfVxuICB9XG59XG4iLCIvL1RoaXMgZmlsZSBpcyBvbmx5IGZvciBtaXhpbnMuIERvbid0IGluY2x1ZGUgYW55IHN0eWxlcyBpbiB0aGlzIGZpbGUgb3IgZWxzZSB0aGV5IHdpbGwgcmVwZWF0ZWQgaW4gZXZlcnkgYmxvY2suXG5cbkBtaXhpbiBoMSggJG1hcmdpbnM6IHRydWUgKSB7XG5cdGZvbnQtd2VpZ2h0OiA3MDA7XG5cdGZvbnQtc2l6ZTogcmVzcG9uc2l2ZS12YWx1ZXMoMzQsIDYwKTtcblx0bGluZS1oZWlnaHQ6IHJlc3BvbnNpdmUtdmFsdWVzKDQwLCA2NCk7XG5cblx0QGlmICggJG1hcmdpbnMgKSB7XG5cdFx0bWFyZ2luLWJvdHRvbTogcmVzcG9uc2l2ZS12YWx1ZXMoMTYsIDMyKTtcblx0fVxufVxuXG5AbWl4aW4gaDIoICRtYXJnaW5zOiB0cnVlICkge1xuXHRmb250LXdlaWdodDogNjAwO1xuXHRmb250LXNpemU6IHJlc3BvbnNpdmUtdmFsdWVzKDI0LCA0Mik7XG5cdGxpbmUtaGVpZ2h0OiByZXNwb25zaXZlLXZhbHVlcygzMiwgNDgpO1xuXG5cdEBpZiAoICRtYXJnaW5zICkge1xuXHRcdG1hcmdpbi10b3A6IHJlc3BvbnNpdmUtdmFsdWVzKDQ4LCA4MCk7XG5cdFx0bWFyZ2luLWJvdHRvbTogcmVzcG9uc2l2ZS12YWx1ZXMoMTYsIDMyKTtcblx0fVxufVxuXG5AbWl4aW4gaDMoICRtYXJnaW5zOiB0cnVlICkge1xuXHRmb250LXdlaWdodDogNjAwO1xuXHRmb250LXNpemU6IHJlc3BvbnNpdmUtdmFsdWVzKDE4LCAyNik7XG5cdGxpbmUtaGVpZ2h0OiByZXNwb25zaXZlLXZhbHVlcygyNCwgMzIpO1xuXG5cdEBpZiAoICRtYXJnaW5zICkge1xuXHRcdG1hcmdpbi10b3A6IHJlc3BvbnNpdmUtdmFsdWVzKDMyLCA0OCk7XG5cdFx0bWFyZ2luLWJvdHRvbTogcmVzcG9uc2l2ZS12YWx1ZXMoOCwgMTYpO1xuXHR9XG59XG5cbkBtaXhpbiBoNCggJG1hcmdpbnM6IHRydWUgKSB7XG5cdGZvbnQtd2VpZ2h0OiA2MDA7XG5cdGxpbmUtaGVpZ2h0OiByZW0oMjQpO1xuXHRmb250LXNpemU6IHJlc3BvbnNpdmUtdmFsdWVzKDE2LCAyMCk7XG5cblx0QGlmICggJG1hcmdpbnMgKSB7XG5cdFx0bWFyZ2luLXRvcDogcmVzcG9uc2l2ZS12YWx1ZXMoMzIsIDQ4KTtcblx0XHRtYXJnaW4tYm90dG9tOiByZXNwb25zaXZlLXZhbHVlcyg4LCAxNik7XG5cdH1cbn1cblxuQG1peGluIGg1KCAkbWFyZ2luczogdHJ1ZSApIHtcblx0Zm9udC13ZWlnaHQ6IDYwMDtcblx0Zm9udC1zaXplOiByZXNwb25zaXZlLXZhbHVlcygxNCwgMTYpO1xuXHRsaW5lLWhlaWdodDogcmVzcG9uc2l2ZS12YWx1ZXMoMTYsIDI0KTtcblxuXHRAaWYgKCAkbWFyZ2lucyApIHtcblx0XHRtYXJnaW4tYm90dG9tOiByZW0oOCk7XG5cdH1cbn1cblxuQG1peGluIGg2KCAkbWFyZ2luczogdHJ1ZSApIHtcblx0Zm9udC13ZWlnaHQ6IDYwMDtcblx0bGluZS1oZWlnaHQ6IHJlbSgxNik7XG5cdGxldHRlci1zcGFjaW5nOiByZW0oMS4yKTtcblx0dGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcblx0Zm9udC1zaXplOiByZXNwb25zaXZlLXZhbHVlcygxMiwgMTQpO1xuXG5cdEBpZiAoICRtYXJnaW5zICkge1xuXHRcdG1hcmdpbi1ib3R0b206IHJlbSg4KTtcblx0fVxufVxuXG5AbWl4aW4gYm9keS0xKCAkbWFyZ2luczogdHJ1ZSApIHtcblx0Zm9udC13ZWlnaHQ6IDQwMDtcblx0Zm9udC1zaXplOiByZXNwb25zaXZlLXZhbHVlcygxNiwgMTgpO1xuXHRsaW5lLWhlaWdodDogcmVzcG9uc2l2ZS12YWx1ZXMoMjAsIDMyKTtcblxuXHRAaWYgKCAkbWFyZ2lucyApIHtcblx0XHRtYXJnaW4tYm90dG9tOiByZXNwb25zaXZlLXZhbHVlcygxNiwgMzIpO1xuXHR9XG59XG5cbkBtaXhpbiBib2R5LTIoICRtYXJnaW5zOiB0cnVlICkge1xuXHRmb250LXNpemU6IHJlbSgxNik7XG5cdGxpbmUtaGVpZ2h0OiByZW0oMjQpO1xuXG5cdEBpZiAoICRtYXJnaW5zICkge1xuXHRcdG1hcmdpbi1ib3R0b206IHJlc3BvbnNpdmUtdmFsdWVzKDE2LCAyNCk7XG5cdH1cbn1cblxuQG1peGluIGxpc3QoICRtYXJnaW5zOiB0cnVlICkge1xuXHRAaW5jbHVkZSBib2R5LTEoICRtYXJnaW5zICk7XG59XG5cbkBtaXhpbiBsZWFkKCAkbWFyZ2luczogdHJ1ZSApIHtcblx0Zm9udC1zaXplOiByZXNwb25zaXZlLXZhbHVlcygyMCwgMzQpO1xuXHRsaW5lLWhlaWdodDogcmVzcG9uc2l2ZS12YWx1ZXMoMjQsIDQwKTtcblxuXHRAaWYgKCAkbWFyZ2lucyApIHtcblx0XHRtYXJnaW4tYm90dG9tOiByZXNwb25zaXZlLXZhbHVlcygyNCwgMzIpO1xuXHR9XG59XG5cbkBtaXhpbiBxdW90ZSggJG1hcmdpbnM6IHRydWUgKSB7XG5cdGZvbnQtc3R5bGU6IGl0YWxpYztcblx0Zm9udC1zaXplOiByZXNwb25zaXZlLXZhbHVlcygyMCwgMzQpO1xuXHRsaW5lLWhlaWdodDogcmVzcG9uc2l2ZS12YWx1ZXMoMjQsIDQwKTtcblxuXHRAaWYgKCAkbWFyZ2lucyApIHtcblx0XHRtYXJnaW4tYm90dG9tOiByZXNwb25zaXZlLXZhbHVlcygyNCwgMzIpO1xuXHR9XG59XG5cbkBtaXhpbiBzdWJ0aXRsZS0xKCAkbWFyZ2luczogdHJ1ZSApIHtcblx0Zm9udC1zaXplOiByZW0oMTYpO1xuXHRsaW5lLWhlaWdodDogcmVtKDI0KTtcblxuXHRAaWYgKCAkbWFyZ2lucyApIHtcblx0XHRtYXJnaW4tYm90dG9tOiByZW0oMjQpO1xuXHR9XG59XG5cbkBtaXhpbiBzdWJ0aXRsZS0yKCAkbWFyZ2luczogdHJ1ZSApIHtcblx0Zm9udC1zaXplOiByZW0oMTQpO1xuXHRsaW5lLWhlaWdodDogcmVtKDI0KTtcblxuXHRAaWYgKCAkbWFyZ2lucyApIHtcblx0XHRtYXJnaW4tYm90dG9tOiByZW0oMjQpO1xuXHR9XG59XG5cbkBtaXhpbiBidXR0b24tMSggJG1hcmdpbnM6IHRydWUgKSB7XG5cdGZvbnQtc2l6ZTogcmVtKDE2KTtcblx0bGluZS1oZWlnaHQ6IHJlbSgzMik7XG5cdGZvbnQtd2VpZ2h0OiA3MDA7XG59XG5cbkBtaXhpbiBidXR0b24tMiggJG1hcmdpbnM6IHRydWUgKSB7XG5cdGZvbnQtc2l6ZTogcmVtKDE0KTtcblx0bGluZS1oZWlnaHQ6IHJlbSgxNik7XG5cdGZvbnQtd2VpZ2h0OiA3MDA7XG59XG5cbkBtaXhpbiBjYXB0aW9uKCAkbWFyZ2luczogdHJ1ZSApIHtcblx0Zm9udC1zaXplOiByZW0oMTIpO1xuXHRsaW5lLWhlaWdodDogcmVtKDE2KTtcblxuXHRAaWYgKCAkbWFyZ2lucyApIHtcblx0XHRtYXJnaW4tYm90dG9tOiByZW0oOCk7XG5cdH1cbn1cblxuQG1peGluIG92ZXJsaW5lKCAkbWFyZ2luczogdHJ1ZSwgJHJlbW92ZV9oZWFkZXJfbWFyZ2luczogdHJ1ZSApIHtcblx0Zm9udC13ZWlnaHQ6IDcwMDtcblx0dGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcblx0Zm9udC1zaXplOiByZW0oMTIpO1xuXHRsaW5lLWhlaWdodDogcmVtKDE2KTtcblx0bGV0dGVyLXNwYWNpbmc6IHJlbSgxLjIpO1xuXG5cdEBpZiAoICRtYXJnaW5zICkge1xuXHRcdG1hcmdpbi1ib3R0b206IHJlbSgxNik7XG5cdH1cblxuXHRAaWYgKCAkcmVtb3ZlX2hlYWRlcl9tYXJnaW5zICkge1xuXHRcdCsgaDEsXG5cdFx0KyAuaDEsXG5cdFx0KyBoMixcblx0XHQrIC5oMixcblx0XHQrIGgzLFxuXHRcdCsgLmgzLFxuXHRcdCsgaDQsXG5cdFx0KyAuaDQsXG5cdFx0KyBoNSxcblx0XHQrIC5oNSxcblx0XHQrIGg2LFxuXHRcdCsgLmg2IHtcblx0XHRcdG1hcmdpbi10b3A6IDA7XG5cdFx0fVxuXHR9XG59XG5cbkBtaXhpbiB0YWcoICRtYXJnaW5zOiB0cnVlICkge1xuXHRmb250LXNpemU6IHJlbSgxNCk7XG5cdGxpbmUtaGVpZ2h0OiByZW0oMTYpO1xuXHRjb2xvcjogcGFpbnQobmV1dHJhbC00NSk7XG59XG5cbkBtaXhpbiBwYWdpbmF0aW9uLW51bWJlciB7XG5cdGZvbnQtd2VpZ2h0OiA3MDA7XG5cdGZvbnQtc2l6ZTogcmVtKDE2KTtcblx0bGluZS1oZWlnaHQ6IHJlbSgxNik7XG59XG4iXX0= */
